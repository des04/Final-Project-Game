#BlueJ class context
comment0.target=Tanky
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Tanky\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ Tanky\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment10.params=
comment10.target=int\ getPlayerTankY()
comment10.text=\r\n\ getPlayerTankY\ gets\ the\ y\ position\ of\ the\ player's\ tank\r\n
comment2.params=
comment2.target=Tanky()
comment2.text=\r\n\ This\ is\ the\ constructor\ for\ the\ Tanky\ class\ (the\ code\ inside\ just\r\n\ scales\ the\ image\ representing\ Tanky\ to\ be\ smaller)\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Noting\ is\ returned\r\n
comment3.params=
comment3.target=void\ shoot()
comment3.text=\r\n\ shoot\ adds\ a\ bullet\ that\ will\ shoot\ out\ away\ from\ where\ the\r\n\ player's\ tank\ is\ facing.\ shoot\ also\ sets\ the\ reload\ time\ back\ up\r\n\ to\ full\ after\ a\ shot\ is\ taken\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment4.params=
comment4.target=void\ selfDammage()
comment4.text=\r\n\ selfDammage\ takes\ health\ away\ from\ the\ player\ tank\ when\ shot\ and\ removes\r\n\ it\ from\ the\ world\ when\ it's\ health\ is\ below\ zero\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment5.params=
comment5.target=void\ checkKeysPressed()
comment5.text=\r\n\ checkKeysPressed\ allows\ the\ player\ tank\ to\ move\ and\ shoot\ when\ curtain\r\n\ keys\ are\ pressed\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment6.params=
comment6.target=boolean\ canMoveForward()
comment6.text=\r\n\ canMoveForward\ checks\ to\ see\ if\ the\ player\ tank\ can\ move\ forward\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ boolean\ movable\ (which\ represents)\ whether\ or\ not\ the\ player\ \r\n\ tank\ is\ blocked\ by\ a\ wall\r\n
comment7.params=
comment7.target=boolean\ canMoveBackward()
comment7.text=\r\n\ canMoveBackward\ checks\ to\ see\ if\ the\ player\ tank\ can\ move\ forward\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ boolean\ movable\ (which\ represents)\ whether\ or\ not\ the\ player\ \r\n\ tank\ is\ blocked\ by\ a\ wall\r\n
comment8.params=
comment8.target=void\ resetHealth()
comment8.text=\r\n\ resetHealth\ resets\ the\ player\ tank's\ health\ to\ the\ maximum\ amount\ of\r\n\ health\ whenever\ the\ player\ finishes\ a\ level\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment9.params=
comment9.target=int\ getPlayerTankX()
comment9.text=\r\n\ getPlayerTankX\ gets\ the\ x\ position\ of\ the\ player's\ tank\r\n
numComments=11
